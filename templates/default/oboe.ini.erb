; Tracelytics oboe instrumentation module for PHP configuration
; for help, please visit
; http://support.tracelytics.com/kb/instrumenting-your-app/instrumenting-php-apps

extension=oboe.so

[oboe]
; oboe.tracing: When traces should be initiated for incoming
; requests. Valid options are "always," "through" (when tracing has
; been enabled upstream) and "never". Default is "through", which
; assumes that the web server calling PHP will make decisions on
; whether to enable tracing (e.g., when sampling).
oboe.tracing = <%= node['tracelytics']['php']['tracing'] %>

; oboe.enable_sanitize_sql: Enable or disable sanitizing SQL query traces using
; a sum of the following options:
;  0 - disable SQL sanitizing (the default),
;  1 - enable SQL sanitizing and attempt to automatically determine which quoting form to use,
;  2 - enable SQL sanitizing and force dropping double quoted characters (overrides 4 and 1),
;  4 - enable SQL sanitizing and force retaining double quoted character (overrides 1).
oboe.enable_sanitize_sql = <%= node['tracelytics']['php']['enable_sanitize_sql'] %>

; oboe.sample_rate: This value reflects the number of requests out
; of every million that will be traced, and must be an integer
; between 0 and 1000000. Default is 300000 (30%).
oboe.sample_rate = <%= node['tracelytics']['php']['sample_rate'] %>

; oboe.collector_ip: IP address of Tracelyzer daemon. Default is localhost.
oboe.collector_ip = 127.0.0.1

; oboe.collector_port: Port of Tracelyzer daemon. Default is 7831.
oboe.collector_port = 7831

; oboe.enable_wrap_error_log: some applications use PHP's error_log() function as an easy way to log 
; debugging and other messages. By setting this value to 0, you will prevent 
; error_log messages from showing up on our Errors page, improving the 
; signal-to-noise ratio. Other, non-error_log PHP errors (such as undefined 
; variables, syntax errors, etc) will still be captured. 
; Default is 1 (ie. enabled).
oboe.enable_wrap_error_log = <%= node['tracelytics']['php']['enable_wrap_error_log'] %>
